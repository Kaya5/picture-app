{"version":3,"sources":["components/Navbar.js","components/Image.js","assets/spinner.gif","components/Logic.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Image","image","id","tags","user","views","downloads","src","alt","api","Logic","useState","keyword","setKeyword","outcomes","setOutcomes","isLoading","setIsLoading","useEffect","a","fetch","response","json","data","hits","console","log","getoutcomes","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","spinner","map","o","webformatURL","uuid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAceA,EAXA,WACb,OACE,mCACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,eAAf,8B,8BCoBOC,G,KAzBD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC7C,OACE,sBAAKP,UAAU,WAAf,UACE,qBAAKQ,IAAKN,EAAOO,IAAI,KACrB,0BAAST,UAAU,YAAnB,UACA,gCACE,8CACA,4BAAIM,OAEN,gCACE,kDACA,4BAAIC,OAEN,gCACE,0CADF,IACmB,kCAAKJ,EAAL,UAEnB,gCACE,wCADF,IACiB,oBAAGH,UAAU,UAAb,cAAyBK,EAAzB,UAEjB,mBAAGL,UAAU,OAAb,SAAqBI,Y,gBCrBZ,MAA0B,oCCMnCM,EACE,2BADFA,EAEC,qCAuEQC,MAnEf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA4BA,OA1BAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAa,GADK,SAEKG,MAAM,GAAD,OACvBX,EADuB,gBACPA,EADO,cACMG,EADN,uCAVnB,kCAQS,cAEZS,EAFY,gBAKCA,EAASC,OALV,OAKZC,EALY,OAMZC,EAAOD,EAAKC,KAClBT,EAAYS,GACZP,GAAa,GACbQ,QAAQC,IAAIH,GATM,4CAAH,qDAWjBI,KAEC,CAACf,IAaF,qBAAKb,UAAU,QAAf,SACE,oCACE,sBAAMA,UAAU,aAAa6B,SATd,SAACC,GACpBA,EAAEC,iBACFf,EAAYD,GACZD,EAAW,KAMP,SACE,uBACEkB,KAAK,OACLhC,UAAU,aACViC,YAAY,YACZC,SAlBY,SAACJ,GACrBhB,EAAWgB,EAAEK,OAAOC,QAkBZA,MAAOvB,MAGVI,EACC,qBAAKjB,UAAU,SAAf,SACE,qBAAKQ,IAAK6B,EAAS5B,IAAI,OAGzB,qBAAKT,UAAU,QAAf,SACGe,EAASuB,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAEErC,MAAOqC,EAAEC,aACTrC,GAAIoC,EAAEpC,GACNG,MAAOiC,EAAEjC,MACTC,UAAWgC,EAAEhC,UACbF,KAAMkC,EAAElC,KACRD,KAAMmC,EAAEnC,MANHqC,kBC/CNC,MAVf,WACE,OACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCES2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d25b001c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Navbar.css\";\n\nconst Navbar = () => {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"navbar-title\">Photophilia\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Image = ({ image, id, tags, user, views, downloads }) => {\n  return (\n    <div className='id-image'>\n      <img src={image} alt=\"\" />\n      <section className='text-data'>\n      <div>\n        <b>Total views: </b>\n        <i>{views}</i>\n      </div>\n      <div>\n        <b>Total downloads: </b>\n        <i>{downloads}</i>\n      </div>\n      <div>\n        <b>Image ID:</b> <i>\"{id}\"</i>\n      </div>\n      <div>\n        <b>Credit:</b> <i className='credits'>\"{user}\"</i>\n      </div>\n      <i className='tags'>{tags}</i>\n      </section>\n    </div>\n  );\n};\n\nexport default Image;\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport Image from \"./Image\";\nimport uuid from \"uuid/v4\";\nimport spinner from \"../assets/spinner.gif\";\n\nconst api = {\n  base: \"https://pixabay.com/api/\",\n  key: \"22668538-30be4bd0e23a11814eaf101fc\",\n};\nconst endURL = \"&image_type=photo&pretty=true\";\n\nfunction Logic() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [outcomes, setOutcomes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getoutcomes = async () => {\n      setIsLoading(true);\n      const response = await fetch(\n        `${api.base}?key=${api.key}&q=${keyword}&order=popular&per_page=100&${endURL}`\n      );\n      const data = await response.json();\n      const hits = data.hits;\n      setOutcomes(hits);\n      setIsLoading(false);\n      console.log(data);\n    };\n    getoutcomes();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyword]);\n\n  const handleKeyword = (e) => {\n    setKeyword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setOutcomes(outcomes);\n    setKeyword(\"\");\n  };\n\n  return (\n    <div className=\"Logic\">\n      <section>\n        <form className=\"search-bar\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            className=\"search-box\"\n            placeholder=\"Search...\"\n            onChange={handleKeyword}\n            value={keyword}\n          />\n        </form>\n        {isLoading ? (\n          <div className=\"loader\">\n            <img src={spinner} alt=\"\" />\n          </div>\n        ) : (\n          <div className=\"Image\">\n            {outcomes.map((o) => (\n              <Image\n                key={uuid()}\n                image={o.webformatURL}\n                id={o.id}\n                views={o.views}\n                downloads={o.downloads}\n                user={o.user}\n                tags={o.tags}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    </div>\n  );\n}\n\nexport default Logic;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Logic from './components/Logic';\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Logic/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}